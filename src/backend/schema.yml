openapi: 3.0.3
info:
  title: Django DRF Ecommerce
  version: 0.0.0
paths:
  /avaliacoes/:
    get:
      operationId: avaliacoes_retrieve
      tags:
      - avaliacoes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avaliacao'
          description: ''
    post:
      operationId: avaliacoes_create
      tags:
      - avaliacoes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avaliacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Avaliacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Avaliacao'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avaliacao'
          description: ''
  /avaliacoes/{id}:
    get:
      operationId: avaliacoes_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - avaliacoes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avaliacao'
          description: ''
    put:
      operationId: avaliacoes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - avaliacoes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avaliacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Avaliacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Avaliacao'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avaliacao'
          description: ''
    delete:
      operationId: avaliacoes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - avaliacoes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /fornecedores/:
    get:
      operationId: fornecedores_retrieve
      tags:
      - fornecedores
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fornecedor'
          description: ''
    post:
      operationId: fornecedores_create
      tags:
      - fornecedores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fornecedor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fornecedor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fornecedor'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fornecedor'
          description: ''
  /fornecedores/{id}:
    get:
      operationId: fornecedores_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - fornecedores
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fornecedor'
          description: ''
    put:
      operationId: fornecedores_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - fornecedores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fornecedor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fornecedor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fornecedor'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fornecedor'
          description: ''
    delete:
      operationId: fornecedores_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - fornecedores
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /produtos/:
    get:
      operationId: produtos_retrieve
      tags:
      - produtos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
          description: ''
    post:
      operationId: produtos_create
      tags:
      - produtos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Produto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Produto'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
          description: ''
  /produtos/{id}:
    get:
      operationId: produtos_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - produtos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
          description: ''
    put:
      operationId: produtos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - produtos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Produto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Produto'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
          description: ''
    delete:
      operationId: produtos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - produtos
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /relatorios/:
    get:
      operationId: relatorios_retrieve
      tags:
      - relatorios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relatorio'
          description: ''
    post:
      operationId: relatorios_create
      tags:
      - relatorios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relatorio'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Relatorio'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Relatorio'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relatorio'
          description: ''
  /relatorios/{id}:
    get:
      operationId: relatorios_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - relatorios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relatorio'
          description: ''
    put:
      operationId: relatorios_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - relatorios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relatorio'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Relatorio'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Relatorio'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relatorio'
          description: ''
    delete:
      operationId: relatorios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - relatorios
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /usuarios/:
    get:
      operationId: usuarios_retrieve
      tags:
      - usuarios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    post:
      operationId: usuarios_create
      tags:
      - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
  /usuarios/{id}:
    get:
      operationId: usuarios_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - usuarios
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    put:
      operationId: usuarios_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    delete:
      operationId: usuarios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - usuarios
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /usuarios/login:
    post:
      operationId: usuarios_login_create
      tags:
      - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Autenticacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Autenticacao'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autenticacao'
          description: ''
  /usuarios/login/refresh:
    post:
      operationId: usuarios_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Autenticacao:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        password:
          type: string
          readOnly: true
      required:
      - email
      - password
    Avaliacao:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        usuario:
          type: integer
        produto:
          type: integer
        nota:
          type: integer
        comentario:
          type: string
      required:
      - comentario
      - id
      - nota
      - produto
      - usuario
    Fornecedor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome_do_negocio:
          type: string
          maxLength: 255
        endereco:
          type: string
          maxLength: 255
        detalhes_de_contato:
          type: string
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
      required:
      - detalhes_de_contato
      - endereco
      - id
      - latitude
      - longitude
      - nome_do_negocio
    Produto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 255
        descricao:
          type: string
        preco:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        categoria:
          type: string
          maxLength: 255
        fornecedor:
          type: integer
      required:
      - categoria
      - descricao
      - fornecedor
      - id
      - nome
      - preco
    Relatorio:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dados_de_uso:
          type: object
          additionalProperties: {}
      required:
      - dados_de_uso
      - id
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Usuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        preferencias_de_busca:
          type: object
          additionalProperties: {}
          nullable: true
        informacoes_de_contato:
          type: string
      required:
      - id
      - informacoes_de_contato
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
